"""refresh schemas

Revision ID: 0675955e1728
Revises: cf90764725d8
Create Date: 2025-04-12 10:20:33.273839

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0675955e1728'
down_revision = 'cf90764725d8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('available_tenant',
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('alembic_version', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('tenant_id')
    )
    op.create_table('user_tenant_mapping',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('email', 'tenant_id'),
    schema='public'
    )
    op.create_table('tenant_anonymous_user_path',
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('anonymous_user_path', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('tenant_id'),
    sa.UniqueConstraint('anonymous_user_path')
    )
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.String(length=155), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('result', sa.PickleType(), nullable=True),
    sa.Column('date_done', sa.DateTime(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=155), nullable=True),
    sa.Column('args', sa.LargeBinary(), nullable=True),
    sa.Column('kwargs', sa.LargeBinary(), nullable=True),
    sa.Column('worker', sa.String(length=155), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('queue', sa.String(length=155), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id'),
    sqlite_autoincrement=True
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('taskset_id', sa.String(length=155), nullable=True),
    sa.Column('result', sa.PickleType(), nullable=True),
    sa.Column('date_done', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('taskset_id'),
    sqlite_autoincrement=True
    )
    op.drop_table('alembic_version')
    op.alter_column('agent__sub_query', 'parent_question_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('agent__sub_query', 'chat_session_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('agent__sub_query', 'sub_query',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('agent__sub_query', 'time_created',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('agent__sub_question', 'primary_question_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('agent__sub_question', 'chat_session_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('agent__sub_question', 'sub_question',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('agent__sub_question', 'time_created',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('agent__sub_question', 'sub_answer',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_foreign_key(None, 'api_key', 'user', ['owner_id'], ['id'])
    op.create_foreign_key(None, 'api_key', 'user', ['user_id'], ['id'])
    op.alter_column('chat_folder', 'display_priority',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('chat_message', 'chat_session_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('chat_message', 'is_agentic',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('chat_message_id_key', 'chat_message', type_='unique')
    op.drop_index('idx_chat_message_tsv', table_name='chat_message', postgresql_using='gin')
    op.drop_constraint('chat_message_chat_session_id_fkey', 'chat_message', type_='foreignkey')
    op.create_foreign_key(None, 'chat_message', 'chat_session', ['chat_session_id'], ['id'])
    op.drop_column('chat_message', 'message_tsv')
    op.drop_constraint('chat_message__search_doc_search_doc_id_fkey', 'chat_message__search_doc', type_='foreignkey')
    op.drop_constraint('chat_message__search_doc_chat_message_id_fkey', 'chat_message__search_doc', type_='foreignkey')
    op.create_foreign_key(None, 'chat_message__search_doc', 'search_doc', ['search_doc_id'], ['id'])
    op.create_foreign_key(None, 'chat_message__search_doc', 'chat_message', ['chat_message_id'], ['id'])
    op.alter_column('chat_session', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_chat_session_desc_tsv', table_name='chat_session', postgresql_using='gin')
    op.drop_column('chat_session', 'description_tsv')
    op.alter_column('chunk_stats', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.alter_column('connector', 'source',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               existing_nullable=False)
    op.alter_column('connector', 'input_type',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('LOAD_STATE', 'POLL', 'EVENT', 'SLIM_RETRIEVAL', name='inputtype', native_enum=False),
               existing_nullable=True)
    op.alter_column('connector_credential_pair', 'id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.create_index(op.f('ix_connector_credential_pair_last_pruned'), 'connector_credential_pair', ['last_pruned'], unique=False)
    op.alter_column('credential', 'source',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               nullable=False)
    op.alter_column('credential', 'credential_json',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('credential', 'curator_public',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('document', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.alter_column('document', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_index('ix_document_by_connector_credential_pair_pkey__connecto_27dc', table_name='document_by_connector_credential_pair')
    op.drop_constraint('document_set_user_id_fkey', 'document_set', type_='foreignkey')
    op.create_foreign_key(None, 'document_set', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('document_set__user', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint('document_set__user_user_id_fkey', 'document_set__user', type_='foreignkey')
    op.create_foreign_key(None, 'document_set__user', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('embedding_provider', 'provider_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('OPENAI', 'COHERE', 'VOYAGE', 'GOOGLE', 'LITELLM', 'AZURE', name='embeddingprovider'),
               existing_nullable=False)
    op.alter_column('file_store', 'file_origin',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('file_store', 'file_type',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('index_attempt', 'error_msg',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_index('ix_index_attempt_status', table_name='index_attempt')
    op.drop_constraint('inputprompt_user_id_fkey', 'inputprompt', type_='foreignkey')
    op.create_foreign_key(None, 'inputprompt', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('inputprompt__user', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.Integer(),
               nullable=True)
    op.drop_constraint('inputprompt__user_user_id_fkey', 'inputprompt__user', type_='foreignkey')
    op.drop_constraint('inputprompt__user_input_prompt_id_fkey', 'inputprompt__user', type_='foreignkey')
    op.create_foreign_key(None, 'inputprompt__user', 'inputprompt', ['user_id'], ['id'])
    op.create_foreign_key(None, 'inputprompt__user', 'inputprompt', ['input_prompt_id'], ['id'])
    op.alter_column('llm_provider', 'provider',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('llm_provider', 'is_default_vision_provider',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('llm_provider', 'is_public',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_column('milestone', 'tenant_id')
    op.alter_column('oauth_account', 'refresh_token',
               existing_type=sa.TEXT(),
               type_=sa.String(length=1024),
               existing_nullable=True)
    op.alter_column('persona', 'num_chunks',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('persona', 'pro_search_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('persona', 'is_default_persona',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('persona__user_fk', 'persona', type_='foreignkey')
    op.create_foreign_key(None, 'persona', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('persona__user', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint('persona__user_user_id_fkey', 'persona__user', type_='foreignkey')
    op.create_foreign_key(None, 'persona__user', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('persona_label', 'description')
    op.alter_column('saml', 'expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_constraint('saml_user_id_fkey', 'saml', type_='foreignkey')
    op.create_foreign_key(None, 'saml', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('search_doc', 'source_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               existing_nullable=False)
    op.alter_column('search_settings', 'query_prefix',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('search_settings', 'passage_prefix',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('search_settings', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('search_settings', 'provider_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('OPENAI', 'COHERE', 'VOYAGE', 'GOOGLE', 'LITELLM', 'AZURE', name='embeddingprovider'),
               existing_nullable=True)
    op.alter_column('search_settings', 'background_reindex_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('search_settings', 'embedding_precision',
               existing_type=sa.VARCHAR(length=8),
               server_default=None,
               existing_nullable=False)
    op.alter_column('search_settings', 'multipass_indexing',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('search_settings', 'multilingual_expansion',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               server_default=None,
               existing_nullable=False)
    op.alter_column('search_settings', 'disable_rerank_for_streaming',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('search_settings', 'num_rerank',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.create_index('ix_embedding_model_future_unique', 'search_settings', ['status'], unique=True, postgresql_where=sa.text("status = 'FUTURE'"))
    op.create_index('ix_embedding_model_present_unique', 'search_settings', ['status'], unique=True, postgresql_where=sa.text("status = 'PRESENT'"))
    op.alter_column('slack_bot', 'enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('slack_channel_config', 'enable_auto_filters',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('slack_channel_config', 'is_default',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.create_unique_constraint('uq_slack_channel_config_slack_bot_id_default', 'slack_channel_config', ['slack_bot_id', 'is_default'])
    op.create_foreign_key(None, 'slack_channel_config__standard_answer_category', 'slack_channel_config', ['slack_channel_config_id'], ['id'])
    op.alter_column('standard_answer', 'match_regex',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('standard_answer', 'match_any_keywords',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('standard_answer_keyword_key', 'standard_answer', type_='unique')
    op.create_index('unique_keyword_active', 'standard_answer', ['keyword', 'active'], unique=True, postgresql_where=sa.text('active = true'))
    op.alter_column('sync_record', 'sync_type',
               existing_type=sa.VARCHAR(length=40),
               type_=sa.Enum('DOCUMENT_SET', 'USER_GROUP', 'CONNECTOR_DELETION', 'PRUNING', 'EXTERNAL_PERMISSIONS', 'EXTERNAL_GROUP', name='synctype', native_enum=False),
               existing_nullable=False)
    op.alter_column('sync_record', 'sync_status',
               existing_type=sa.VARCHAR(length=40),
               type_=sa.Enum('IN_PROGRESS', 'SUCCESS', 'FAILED', 'CANCELED', name='syncstatus', native_enum=False),
               existing_nullable=False)
    op.alter_column('tag', 'source',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               existing_nullable=False)
    op.alter_column('tool', 'passthrough_auth',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('tool_user_fk', 'tool', type_='foreignkey')
    op.create_foreign_key(None, 'tool', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('tool_call', 'tool_result',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
    op.drop_constraint('uq_tool_call_message_id', 'tool_call', type_='unique')
    op.drop_constraint('tool_call_message_id_fkey', 'tool_call', type_='foreignkey')
    op.create_foreign_key(None, 'tool_call', 'chat_message', ['message_id'], ['id'])
    op.drop_constraint('usage_reports_requestor_user_id_fkey', 'usage_reports', type_='foreignkey')
    op.create_foreign_key(None, 'usage_reports', 'user', ['requestor_user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('user', 'temperature_override_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user', 'shortcut_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('user', 'visible_assistants',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=False)
    op.alter_column('user', 'hidden_assistants',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=False)
    op.alter_column('user', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.create_foreign_key(None, 'user__external_user_group_id', 'connector_credential_pair', ['cc_pair_id'], ['id'])
    op.create_foreign_key(None, 'user__external_user_group_id', 'user', ['user_id'], ['id'])
    op.alter_column('user__user_group', 'is_curator',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('user__user_group', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint('user__user_group_user_id_fkey', 'user__user_group', type_='foreignkey')
    op.create_foreign_key(None, 'user__user_group', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user__user_group', type_='foreignkey')
    op.create_foreign_key('user__user_group_user_id_fkey', 'user__user_group', 'user', ['user_id'], ['id'])
    op.alter_column('user__user_group', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('user__user_group', 'is_curator',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.drop_constraint(None, 'user__external_user_group_id', type_='foreignkey')
    op.drop_constraint(None, 'user__external_user_group_id', type_='foreignkey')
    op.alter_column('user', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=False)
    op.alter_column('user', 'hidden_assistants',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'[]'::jsonb"),
               existing_nullable=False)
    op.alter_column('user', 'visible_assistants',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'[]'::jsonb"),
               existing_nullable=False)
    op.alter_column('user', 'shortcut_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('user', 'temperature_override_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
    op.drop_constraint(None, 'usage_reports', type_='foreignkey')
    op.create_foreign_key('usage_reports_requestor_user_id_fkey', 'usage_reports', 'user', ['requestor_user_id'], ['id'])
    op.drop_constraint(None, 'tool_call', type_='foreignkey')
    op.create_foreign_key('tool_call_message_id_fkey', 'tool_call', 'chat_message', ['message_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint('uq_tool_call_message_id', 'tool_call', ['message_id'])
    op.alter_column('tool_call', 'tool_result',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.drop_constraint(None, 'tool', type_='foreignkey')
    op.create_foreign_key('tool_user_fk', 'tool', 'user', ['user_id'], ['id'])
    op.alter_column('tool', 'passthrough_auth',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('tag', 'source',
               existing_type=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('sync_record', 'sync_status',
               existing_type=sa.Enum('IN_PROGRESS', 'SUCCESS', 'FAILED', 'CANCELED', name='syncstatus', native_enum=False),
               type_=sa.VARCHAR(length=40),
               existing_nullable=False)
    op.alter_column('sync_record', 'sync_type',
               existing_type=sa.Enum('DOCUMENT_SET', 'USER_GROUP', 'CONNECTOR_DELETION', 'PRUNING', 'EXTERNAL_PERMISSIONS', 'EXTERNAL_GROUP', name='synctype', native_enum=False),
               type_=sa.VARCHAR(length=40),
               existing_nullable=False)
    op.drop_index('unique_keyword_active', table_name='standard_answer', postgresql_where=sa.text('active = true'))
    op.create_unique_constraint('standard_answer_keyword_key', 'standard_answer', ['keyword'])
    op.alter_column('standard_answer', 'match_any_keywords',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('standard_answer', 'match_regex',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.drop_constraint(None, 'slack_channel_config__standard_answer_category', type_='foreignkey')
    op.drop_constraint('uq_slack_channel_config_slack_bot_id_default', 'slack_channel_config', type_='unique')
    op.alter_column('slack_channel_config', 'is_default',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('slack_channel_config', 'enable_auto_filters',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('slack_bot', 'enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.drop_index('ix_embedding_model_present_unique', table_name='search_settings', postgresql_where=sa.text("status = 'PRESENT'"))
    op.drop_index('ix_embedding_model_future_unique', table_name='search_settings', postgresql_where=sa.text("status = 'FUTURE'"))
    op.alter_column('search_settings', 'num_rerank',
               existing_type=sa.INTEGER(),
               server_default=sa.text('20'),
               existing_nullable=False)
    op.alter_column('search_settings', 'disable_rerank_for_streaming',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('search_settings', 'multilingual_expansion',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               server_default=sa.text("'{}'::character varying[]"),
               existing_nullable=False)
    op.alter_column('search_settings', 'multipass_indexing',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('search_settings', 'embedding_precision',
               existing_type=sa.VARCHAR(length=8),
               server_default=sa.text("'FLOAT'::character varying"),
               existing_nullable=False)
    op.alter_column('search_settings', 'background_reindex_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('search_settings', 'provider_type',
               existing_type=sa.Enum('OPENAI', 'COHERE', 'VOYAGE', 'GOOGLE', 'LITELLM', 'AZURE', name='embeddingprovider'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('search_settings', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('search_settings', 'passage_prefix',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('search_settings', 'query_prefix',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('search_doc', 'source_type',
               existing_type=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_constraint(None, 'saml', type_='foreignkey')
    op.create_foreign_key('saml_user_id_fkey', 'saml', 'user', ['user_id'], ['id'])
    op.alter_column('saml', 'expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.add_column('persona_label', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'persona__user', type_='foreignkey')
    op.create_foreign_key('persona__user_user_id_fkey', 'persona__user', 'user', ['user_id'], ['id'])
    op.alter_column('persona__user', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'persona', type_='foreignkey')
    op.create_foreign_key('persona__user_fk', 'persona', 'user', ['user_id'], ['id'])
    op.alter_column('persona', 'is_default_persona',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('persona', 'pro_search_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('persona', 'num_chunks',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('oauth_account', 'refresh_token',
               existing_type=sa.String(length=1024),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.add_column('milestone', sa.Column('tenant_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('llm_provider', 'is_public',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('llm_provider', 'is_default_vision_provider',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
    op.alter_column('llm_provider', 'provider',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'inputprompt__user', type_='foreignkey')
    op.drop_constraint(None, 'inputprompt__user', type_='foreignkey')
    op.create_foreign_key('inputprompt__user_input_prompt_id_fkey', 'inputprompt__user', 'inputprompt', ['input_prompt_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('inputprompt__user_user_id_fkey', 'inputprompt__user', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('inputprompt__user', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'inputprompt', type_='foreignkey')
    op.create_foreign_key('inputprompt_user_id_fkey', 'inputprompt', 'user', ['user_id'], ['id'])
    op.create_index('ix_index_attempt_status', 'index_attempt', ['status'], unique=False)
    op.alter_column('index_attempt', 'error_msg',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('file_store', 'file_type',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'text/plain'::character varying"),
               existing_nullable=False)
    op.alter_column('file_store', 'file_origin',
               existing_type=sa.VARCHAR(),
               server_default=sa.text("'connector'::character varying"),
               existing_nullable=False)
    op.alter_column('embedding_provider', 'provider_type',
               existing_type=sa.Enum('OPENAI', 'COHERE', 'VOYAGE', 'GOOGLE', 'LITELLM', 'AZURE', name='embeddingprovider'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_constraint(None, 'document_set__user', type_='foreignkey')
    op.create_foreign_key('document_set__user_user_id_fkey', 'document_set__user', 'user', ['user_id'], ['id'])
    op.alter_column('document_set__user', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'document_set', type_='foreignkey')
    op.create_foreign_key('document_set_user_id_fkey', 'document_set', 'user', ['user_id'], ['id'])
    op.create_index('ix_document_by_connector_credential_pair_pkey__connecto_27dc', 'document_by_connector_credential_pair', ['connector_id', 'credential_id'], unique=False)
    op.alter_column('document', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('document', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('credential', 'curator_public',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('credential', 'credential_json',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('credential', 'source',
               existing_type=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               type_=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_index(op.f('ix_connector_credential_pair_last_pruned'), table_name='connector_credential_pair')
    op.alter_column('connector_credential_pair', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('connector_credential_pair_id_seq'::regclass)"),
               existing_nullable=False)
    op.alter_column('connector', 'input_type',
               existing_type=sa.Enum('LOAD_STATE', 'POLL', 'EVENT', 'SLIM_RETRIEVAL', name='inputtype', native_enum=False),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.alter_column('connector', 'source',
               existing_type=sa.Enum('INGESTION_API', 'SLACK', 'WEB', 'GOOGLE_DRIVE', 'GMAIL', 'REQUESTTRACKER', 'GITHUB', 'GITBOOK', 'GITLAB', 'GURU', 'BOOKSTACK', 'CONFLUENCE', 'SLAB', 'JIRA', 'PRODUCTBOARD', 'FILE', 'NOTION', 'ZULIP', 'LINEAR', 'HUBSPOT', 'DOCUMENT360', 'GONG', 'GOOGLE_SITES', 'ZENDESK', 'LOOPIO', 'DROPBOX', 'SHAREPOINT', 'TEAMS', 'SALESFORCE', 'DISCOURSE', 'AXERO', 'CLICKUP', 'MEDIAWIKI', 'WIKIPEDIA', 'ASANA', 'S3', 'R2', 'GOOGLE_CLOUD_STORAGE', 'OCI_STORAGE', 'XENFORO', 'NOT_APPLICABLE', 'DISCORD', 'FRESHDESK', 'FIREFLIES', 'EGNYTE', 'AIRTABLE', 'HIGHSPOT', 'OUTLOOK', 'REGULATION', 'MOCK_CONNECTOR', name='documentsource', native_enum=False),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('chunk_stats', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.add_column('chat_session', sa.Column('description_tsv', postgresql.TSVECTOR(), sa.Computed("to_tsvector('english'::regconfig, COALESCE(description, ''::text))", persisted=True), autoincrement=False, nullable=True))
    op.create_index('idx_chat_session_desc_tsv', 'chat_session', ['description_tsv'], unique=False, postgresql_using='gin')
    op.alter_column('chat_session', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    op.drop_constraint(None, 'chat_message__search_doc', type_='foreignkey')
    op.drop_constraint(None, 'chat_message__search_doc', type_='foreignkey')
    op.create_foreign_key('chat_message__search_doc_chat_message_id_fkey', 'chat_message__search_doc', 'chat_message', ['chat_message_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('chat_message__search_doc_search_doc_id_fkey', 'chat_message__search_doc', 'search_doc', ['search_doc_id'], ['id'], ondelete='CASCADE')
    op.add_column('chat_message', sa.Column('message_tsv', postgresql.TSVECTOR(), sa.Computed("to_tsvector('english'::regconfig, message)", persisted=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'chat_message', type_='foreignkey')
    op.create_foreign_key('chat_message_chat_session_id_fkey', 'chat_message', 'chat_session', ['chat_session_id'], ['id'], ondelete='CASCADE')
    op.create_index('idx_chat_message_tsv', 'chat_message', ['message_tsv'], unique=False, postgresql_using='gin')
    op.create_unique_constraint('chat_message_id_key', 'chat_message', ['id'])
    op.alter_column('chat_message', 'is_agentic',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('chat_message', 'chat_session_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('chat_folder', 'display_priority',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'api_key', type_='foreignkey')
    op.drop_constraint(None, 'api_key', type_='foreignkey')
    op.alter_column('agent__sub_question', 'sub_answer',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('agent__sub_question', 'time_created',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('agent__sub_question', 'sub_question',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('agent__sub_question', 'chat_session_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('agent__sub_question', 'primary_question_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('agent__sub_query', 'time_created',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('agent__sub_query', 'sub_query',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('agent__sub_query', 'chat_session_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('agent__sub_query', 'parent_question_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_version_pkc')
    )
    op.drop_table('celery_tasksetmeta')
    op.drop_table('celery_taskmeta')
    op.drop_table('tenant_anonymous_user_path')
    op.drop_table('user_tenant_mapping', schema='public')
    op.drop_table('available_tenant')
    # ### end Alembic commands ###
